'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.SqlClient
Imports System.Windows

Namespace BulletinBoard_OJT.DB_Entity
    Partial Public Class BulletinBoardEntities
        Inherits DbContext

        Public Sub New()
            MyBase.New("name=BulletinBoardEntities")
            InitializeDatabase()
            ' Database.SetInitializer(Of BulletinBoardEntities)(New CreateDatabaseIfNotExists(Of BulletinBoardEntities)())
        End Sub

        Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
            MyBase.OnModelCreating(modelBuilder)
            modelBuilder.Conventions.Remove(Of System.Data.Entity.ModelConfiguration.Conventions.PluralizingTableNameConvention)()
            Throw New UnintentionalCodeFirstException()
        End Sub

        Public Overridable Property Posts() As DbSet(Of Posts)
        Public Overridable Property Users() As DbSet(Of Users)
        Public Overridable Property Roles() As DbSet(Of Roles)
        Public Overridable Property ImageFiles() As DbSet(Of ImageFile)

        Private Sub InitializeDatabase()
            Database.SetInitializer(New CreateInitializer())

            If Not Database.Exists() Then
                Database.Initialize(True)
            End If
        End Sub

        Public Sub RunSeed(ByVal Context As BulletinBoardEntities)
            'Dim roles_id As String = "E17A8D77-55D2-4F35-A4A9-B3A6FF5B5A49"
            'Dim role_id = New Guid(roles_id)
            Dim connectionString As String = ConfigurationManager.ConnectionStrings("ConString").ConnectionString

            'Dim role_id = New Guid("36a86d3d-b421-442c-9ea6-4b2fc91e2cc0")

            Dim roles = New List(Of Roles)() From {
                New Roles() With {
                    .Id = Guid.NewGuid,
                    .Type = "Administrator"
                },
                New Roles() With {
                    .Id = Guid.NewGuid,
                    .Type = "User"
                },
                New Roles() With {
                     .Id = Guid.NewGuid,
                     .Type = "Vistior"
                }
            }


            For Each r In roles
                Context.Roles.Add(r)
            Next

            Context.SaveChanges()
            Dim role_id As Guid = (From x In Context.Roles Where x.Type = "Administrator" Select x.Id).FirstOrDefault()
            Dim query As String = String.Empty
            Dim user_id = Guid.NewGuid
            Dim creation = DateTime.Now

            Using conn As New SqlConnection(connectionString)
                Using comm As New SqlCommand()
                    With comm
                        .Connection = conn
                        .CommandType = CommandType.Text
                        .CommandText = "INSERT INTO Users (Id ,Name ,Email ,Password ,Profile,Phone,Address,Dob,Deleted_User_Id,Created_At,Updated_At,Deleted_At,Is_Deleted,Roles_Id,Created_User_Id,Updated_User_Id)
                        VALUES(@userId, 'Admin', 'admin@gmail.com', 'OC4DYOTre3ADT7qmm+xXhg==', 'profile', '0987654321', 'Address', convert(datetime,'1999-01-01 00:00:00.000'), NULL, convert(datetime,'2020-03-03 00:00:00.000'),  convert(datetime,'2020-03-03 00:00:00.000'), NULL, 'active', @roleId, @userId, @userId)"



                    End With
                    comm.Parameters.Add("@userId", SqlDbType.UniqueIdentifier).Value = New System.Data.SqlTypes.SqlGuid(user_id)
                    comm.Parameters.Add("@roleId", SqlDbType.UniqueIdentifier).Value = New System.Data.SqlTypes.SqlGuid(role_id)

                    Try
                        conn.Open()
                        comm.ExecuteNonQuery()
                    Catch ex As SqlException
                        Console.WriteLine(ex.Message)

                    Finally
                        conn.Close()
                    End Try
                End Using
            End Using


        End Sub

    End Class

    Public Class CreateInitializer
        Inherits CreateDatabaseIfNotExists(Of BulletinBoardEntities)

        Protected Overrides Sub Seed(ByVal context As BulletinBoardEntities)
            context.RunSeed(context)
            'MyBase.Seed(context)
        End Sub
    End Class

End Namespace
